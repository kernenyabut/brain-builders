@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item signup-divide">
            <a class="nav-link" id="btnProfile" asp-area="" asp-route-name="@User.Identity.Name" asp-controller="Profiles" asp-action="Details">Profile</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="btnManageUser" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Manage @User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {

    <li class="nav-item signup-divide">
        <a class="nav-link" id="btnRegister" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="btnLogin" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    }
</ul>